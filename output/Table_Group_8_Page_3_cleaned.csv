python
import pandas as pd
import io

csv_data = """0,1,2,3
Academic Year,2023-24,2022-23,2021-22
,Utilised Amount,Utilised Amount,Utilised Amount
Annual Operational Expenditure,,,
Salaries (Teaching and Non Teaching staff),"8523975101 (Eight Hundred Fifty Two Crore Thirty Nine Lakh
Seventy Five Thousand One Hundred and One Only)","6581612412 (Six Hundred Fifty Eight Crore Sixteen Lakhs
Twelve Thousand Four Hundred and Twelve Only)","6070571682 (Six Hundred And Seven Crore Five Lakh
Seventy One Thousand Six Hundred And Eighty Two)"
"Maintenance of Academic Infrastructure or consumables and
other running expenditures(excluding maintenance of hostels
and allied services,rent of the building, depreciation cost, etc)","4688514494 (Four Hundred Sixty Eight Crore Eighty Five Lakh
Fourteen Thousand Four Hundred and Ninety Four Only)","3380913236 (Three Hundred and Thirty Eight Crores Nine
Lakhs Thirteen Thousand Two Hundred and Thirty Six Only)","2978397843 (Two Hundred And Ninety Seven Crore Eighty
Three Lakh Ninety Seven Thousand Eight Hundred And Forty
Three)"
Seminars/Conferences/Workshops,"247557830 (Twenty Four Crore Seventy Five Lakh Fifty Seven
Thousand Eight Hundred and Thirty Only)","22683371 (Two Crore Twenty Six Lakhs Eighty Three
Thousand Three Hundred and Seventy One Only)","9177625 (Ninety One Lakhs Seventy Seven Thousand Six
Hundred Twenty Five Only)"
"""

df = pd.read_csv(io.StringIO(csv_data), header=None)

# Remove the first column as it's just row numbers for unpivoting
df_data = df.iloc[:, 1:].copy()

# Extract the academic year headers
academic_years = df.iloc[0, 1:].tolist()

# Extract the second header row for the "Utilised Amount" label
second_header = df.iloc[1, 1:].tolist()

# Extract the first column as row identifiers
row_identifiers = df.iloc[:, 0].tolist()

# Create a list to store the unpivoted data
unpivoted_data = []

# Iterate over the data rows, skipping the header rows
for i in range(2, len(df_data)):
    row_label = row_identifiers[i]
    if pd.notna(row_label) and row_label != '':
        for j in range(len(academic_years)):
            year = academic_years[j]
            # Check if the value is not empty/null and not just whitespace
            value = df_data.iloc[i - 2, j] # Adjust index as we skipped header rows
            if pd.notna(value) and str(value).strip() != '':
                description = f"{row_label} ({second_header[j]}) - {year}"
                unpivoted_data.append([description, str(value).strip()])

# Create a new DataFrame from the unpivoted data
unpivoted_df = pd.DataFrame(unpivoted_data, columns=['Description', 'Value'])

print(unpivoted_df.to_string(index=False))
```

**Explanation:**

1.  **Import Libraries:** Import `pandas` for data manipulation and `io` to read the string as a file.
2.  **Load CSV Data:** The provided CSV data is stored in a multiline string and then read into a pandas DataFrame using `pd.read_csv`. `header=None` is used because the CSV doesn't have a standard header row that we want to use as column names directly.
3.  **Extract Header Information:**
    *   `academic_years`: The first row (index 0) from the second column onwards contains the academic years (e.g., '2023-24').
    *   `second_header`: The second row (index 1) from the second column onwards contains a repeated label, which we'll use in the description.
    *   `row_identifiers`: The first column (index 0) contains the primary labels for each row (e.g., 'Salaries (Teaching and Non Teaching staff)').
4.  **Iterate and Unpivot:**
    *   The code iterates through the rows of the DataFrame, starting from the row after the header rows (`range(2, len(df_data))`).
    *   For each row, it gets the `row_label`.
    *   It then iterates through the `academic_years` (columns).
    *   For each academic year, it extracts the corresponding `value` from the DataFrame. We subtract `2` from `i` because we've skipped the first two header rows in our iteration.
    *   **Filtering:** It checks if the `value` is not `NaN` (Not a Number) and not an empty string or just whitespace using `pd.notna(value) and str(value).strip() != ''`.
    *   **Construct Description:** If a valid value is found, a descriptive `description` is created by combining the `row_label`, the `second_header` element for that column, and the `academic_year`.
    *   The `description` and the cleaned `value` are appended to the `unpivoted_data` list.
5.  **Create Final DataFrame:** The `unpivoted_data` list is converted into a new pandas DataFrame with columns named 'Description' and 'Value'.
6.  **Print Output:** `unpivoted_df.to_string(index=False)` prints the resulting DataFrame without the DataFrame index, making it look like a clean two-column output.

This script effectively transforms your wide-format CSV data into a long, two-column format as requested, creating meaningful descriptions by combining relevant header information.